;;   Copyright (c) Aemon Cannon. All rights reserved.
;;   The use and distribution terms for this software are covered by the
;;   Common Public License 1.0 (http://opensource.org/licenses/cpl.php)
;;   which can be found in the file CPL.TXT at the root of this distribution.
;;   By using this software in any fashion, you are agreeing to be bound by
;;   the terms of this license.
;;   You must not remove this notice, or any other, from this software.

(in-ns 'garden)
(las3r/refer 'las3r)

(import '(flash.display Graphics Sprite DisplayObject)
	'(flash.events Event EventDispatcher)
	'(flash.utils Timer))

(defn stage-w [] (. *stage* stageWidth))

(defn stage-h [] (. *stage* stageHeight))

(def *plants* (map (fn [i] {:x (rand-int (stage-w)) :y (rand-int (stage-h))}) (range 50)))

(def *earth* (let [earth (new Sprite)] (. *stage* (addChild earth))))

(def *ticker* (new Timer 1000))


(defn update-plants [])


(defn update-view []
  (let [g (. *earth* graphics)]
    (doseq plant *plants*
      (let [x (get plant :x)
	    y (get plant :y)
	    leaf-x (+ x (- (rand-int 20) (rand-int 40)))
	    leaf-y (+ y (- (rand-int 20) (rand-int 40)))
	    leaf-size (rand-int 20)]
	(doto g
	  (beginFill 0x00AA00 1.0)
	  (drawCircle leaf-x leaf-y leaf-size)
	  (endFill))
	))
    ))


(defn init []
  "The main entry point."
  (. *ticker* 
     (addEventListener 
      "timer" 
      (fn [e] 
	(update-plants)
	(update-view))))
  (. *ticker* (start)))


(init)